AIM: To design a verilog HDL for designing ALU using behaviral model. TOP
MODULE
`timescale 1ns / lns
// Code your design here

module alu_32 (en, opcode, a, b,y);
input en;
input [31:0]a,b;
input [2:0]opcode;
output reg [32:0]y; //one bit extra for carry
always@(*)
begin
if (en==0)
y=33'bz;
else begin
case (opcode)
3'b000:y=a+b;
3'b001: y=a/b;
3'b010: y=a&b;
3'b011: y=a+b;
3'b100:y=a-b;
3'b101: y=a*b;
3'b110:y=a^b;
3'b111:y= ~a;
endcase
end
end
endmodule

Test bench
`timescale ins/ins
module alu_tb;
reg en;
reg [31:0] A,B;
reg [2:0] ALU_Sel;
//Outputs
wire [32:0] ALU_Out;
// Verilog code for ALU
integer i;
alu_32 test_unit( en, ALU_Sel, A, B, ALU_Out );
initial begin
$dumpvars (1);
en=0;
#10 en=1; A = 31'hOA; B31'h02; ALU_Sel = 3'h0;
for (i=0;i<=7; i=i+1)
begin
#10 ALU_Sel = ALU_Sel + 3'b01;
end
end
endmodule
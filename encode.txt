PRIORITY

module prio_enco(en, a_in, y_op,v);
input en;
input [7:0] a_in;
output reg v;
output [2:0] y_op;
reg [2:0] y_op;
always @ (a_in,en)
begin
  if(en==0 )
    begin
      y_op =3'bxxx;
      v=1'b0;
    end 
else 
  begin 
    v=1'b1;
case (a_in)
8'b00000001: y_op =3'b000;
8'b0000001x: y_op= 3'b001;
8'b000001xx: y_op= 3'b010;
8'b00001xxx: y_op= 3'b011;
8'b0001xxxx: y_op= 3'b100;
8'b001xxxxx: y_op= 3'b101;
8'b01xxxxxx: y_op= 3'b110;
8'b1xxxxxxx: y_op= 3'b111;
default: y_op=3'bzzz;
endcase
end
end
endmodule

Test bench 
// Code your testbench here
// or browse Examples
module encoder_prio_test_tb;

// Inputs
reg en;
reg [7:0] a_in;

    
// Outputs
wire v;
wire [2:0] y_op;
    
    
// Instantiate the Unit Under Test (UUT)
prio_enco uut(en,a_in,y_op,v);
    
    initial begin
      $dumpfile("dump.vcd");
      $dumpvars(1);
        a_in = 8'b00000000;
        en = 1'b0;
      
        #10 en =1'b1; a_in = 8'b00000001;
        #10 a_in = 8'b00000010;
        #10 a_in = 8'b00000100;
        #10 a_in = 8'b00001000;
        #10 a_in = 8'b00010000;
        #10 a_in = 8'b00100000;
        #10 a_in = 8'b01000000;
        #10 a_in = 8'b10000000;
    end
    
endmodule



WITHOUT


Verilog code
// Code your design here
module encoder8_3(en, a_in, y_op,v);
input en;
input [7:0] a_in;
output reg v;
output [2:0] y_op;
reg [2:0] y_op;
always @ (a_in,en)
begin
  if(en==0 )
    begin
      y_op =3'bxxx;
      v=1'b0;
    end 
else
  begin 
    v=1'b1;
case (a_in)
8'b00000001: y_op = 3'b000;
8'b00000010: y_op = 3'b001;
8'b00000100: y_op = 3'b010;
8'b00001000: y_op = 3'b011;
8'b00010000: y_op = 3'b100;
8'b00100000: y_op = 3'b101;
8'b01000000: y_op = 3'b110;
8'b10000000: y_op = 3'b111;
default: y_op =3'bzzz;
endcase
end
end
endmodule


Test bench 
// Code your testbench here
// or browse Examples
module encodertest_tb;

// Inputs
reg en;
reg [7:0] a_in;

    
// Outputs
wire v;
wire [2:0] y_op;
    
    
// Instantiate the Unit Under Test (UUT)
encoder8_3 uut(en,a_in,y_op,v);
    
    initial begin
      $dumpfile("dump.vcd");
      $dumpvars(1);
        a_in = 8'b00000000;
        en = 1'b0;
      
        #10 en =1'b1; a_in = 8'b00000001;
        #10 a_in = 8'b00000010;
        #10 a_in = 8'b00000100;
        #10 a_in = 8'b00001000;
        #10 a_in = 8'b00010000;
        #10 a_in = 8'b00100000;
        #10 a_in = 8'b01000000;
        #10 a_in = 8'b10000000;
    end
    
endmodule


